＜Wi-Fi機能の利用方法＞

Raspberry Pi Pico Wに、Wi-Fi版のMachiKania type Pをインストールすると、Wi-Fi機能を利用することができます。2.4 GHz帯のWi-Fiルーターを使用してください。ルーターに接続すためのSSIDとパスワードは、MACHIKAP.INIで次の例のように設定することができます。

WIFISSID=xxxx
WIFIPASSWD=xxxx

ルーターがDHCPによるIPアドレスの自動割り当ての機能を持っていれば（ほとんどのケースで持っています）、ネットに接続することができます。ルーターがインターネット接続であれば、MachiKaniaからもインターネットに接続することができます。

MachiKaniaを用いて、クライアントアプリケーションとサーバーアプリケーションのどちらでも構築することができます。インターネットではHTTPプロトコル（http, https, web, www, htmlなどと表記されるもの）が多用されますが、MachiKaniaでは、WGETクラスやHTTPDクラスを用いて、http/httpsクライアントアプリケーションやhttpサーバーアプリケーションを容易に構築できます。


＜ネット接続用のクラス＞

クライアントアプリケーション用のクラスとして、WGETをライブラリーに用意しました。これを用いると、URLを文字列として指定するだけで、webサイトから情報を取得することができます。httpsサイトにも対応しています。使い方は、WGETクラスのhelp.txtを参照してください。

サーバーアプリケーション用のクラスとして、HTTPDをライブラリーに用意しました。htmlや画像ファイルなどをディレクトリーに配置しておけば、一般的なHTTPサーバーとして用いることができます。どのURLにアクセスを受けたのかを容易に知ることができるので、スマートフォンからMachiKaniaを操作する事が、簡単にできます。使い方は、HTTPDクラスのhelp.txtを参照してください。


＜Wi-Fi用の命令と関数＞

Wi-Fiに関連した命令や関数としては、以下の物があります。使い方の概要としては、まずTCPCLIENT/TLSCLIENT/TCPSERVERのいずれかを呼び出し、TCPSTATUS()もしくはTCPACCEPT()をポーリングし、接続があればTCPSEND/TCPRECEIVEで反応を行い、最後にTCPCLOSEで接続を切る、という流れです。下の使用例や、WGETクラスやHTTPDクラスでの利用例を参考にしてください。

DNS$(x$)
	インターネット上のホスト名がx$で示されるコンピューターのIPアドレスを文字列として返す。

IFCONFIG$(x)
	Wi-Fi接続情報を文字列として返す。
		xが0の時、IPアドレス
		xが1の時、サブネットマスク
		xが2の時、ゲートウェイアドレス
		xが3の時、DNSサーバーアドレス

NTP, NTP()
	NTPサーバーに接続し、RTC(リアルタイムクロック)を設定する。関数として呼ばれた場合は、エラー番号(エラーが無いときは0)を返す。

TCPACCEPT()
	TCPサーバーを開始している時、クライアントからの接続もしくは受信があった時、コネクションIDを整数値で返す。接続か受信のどちらを返すかは、TCPSERVERの使い方を参照。コネクションIDはこの関数から一度だけしか返されないので、保存しておく必要がある。

TCPCLIENT x$[,y]
	x$で示されるサーバーの、yで示されるポートに、TCP接続する。yを省略した場合は80。

TCPCLOSE [x], TCPCLOSE([x])
	TCP接続を閉じる。サーバーを利用している場合、xを指定した場合は指定のコネクションIDとの接続を切り、xを指定しない場合はサーバーをシャットダウンする。

TCPRECEIVE x,y[,z], TCPRECEIVE(x,y[,z])
	xで示されるバッファーに、最大でyバイト受信する。サーバーを利用時にzを指定した場合は、指定のコネクションIDからの受信を得る。関数として呼ばれた場合、受信バイト数を返す。

TCPSEND x|x$[,y[,z]],TCPSEND (x|x$[,y[,z]])
	xで示されるバッファーもしくはx$で示される文字列を、yバイト送信する。文字列の場合はyを省略する、もしくは-1とすると、全文字列が送信される。サーバーを利用時にzを指定した場合は、指定のコネクションIDに対して送信する。関数として呼ばれた場合、エラー番号(エラーが無いときは0)を返す。なお、この命令をTCPCLIENT/TLSCLIENTの前に実行すれば、接続時にすぐに送信することができる。

TCPSERVER [x[,y]]
	TCPサーバーを、ポートxで開始する。xを省略した場合は、80。yには、TCPACCEPT()が返す情報の種類を指定する。省略した場合は、1。
		yが0の時、TCPACCEPT()はクライアントが接続してきたときにコネクションIDを返す。
		yが1の時、TCPACCEPT()はクライアントから受信したときにコネクションIDを返す。

TCPSTATUS(x[,y])
	TCP/IP接続状況を返す。サーバーを利用時にyを指定した場合は、指定のコネクションIDに関する情報を返す。
		xが0の時、接続しているかどうか。接続していれば1を、接続していなければ0を返す。
		xが1の時、受け取った通信のバイト数を返す。

TLSCLIENTx$[,y]
	x$で示されるサーバーの、yで示されるポートに、TLS接続する。yを省略した場合は443。


＜セキュリティーについて＞

MachiKaniaは、組み込み機器用の小規模プログラムです。従って、一般的なwebブラウザー（FireFox, Chrome, Edgeなど）や、一般的なサーバー（Apacheなど）と同レベルのセキュリティーを確保する事はできません。

MachiKaniaでサーバーを構築した場合、そのサーバーはローカル環境（イントラネット）内でのみ利用し、外部に公開する事は避けてください。外部に公開した場合、インターネットに於いて行われる様々な攻撃に脆弱です。例えば、DoS攻撃には無防備で、簡単にシャットダウンさせることが可能です。その他、情報の漏洩や乗っ取り等が起こりえます。プライベートなWi-Fiを用いたローカル環境でのみ接続可能な状況にしておけば、これらの心配をする必要はありません。ローカルな環境であっても、パブリックなWi-Fiに接続した場合は同様の問題が起こりえますので、注意してください。

MachiKaniaでhttpsサイトにアクセスした場合、通常のブラウザーによるhttpsサイトへのアクセスに比べて、セキュリティーレベルが低いです。たとえ接続先がhttpsサイトであっても、httpサイトへの接続と同じ問題が起こる可能性があります。例えば、送信する個人情報（パスワードなど）の漏洩や、接続先が指定した物とは異なるフィッシングなどの被害が起こりえます。これは、専門的に解説すると、MachiKanianiaに限らず小規模プログラムでTLS接続を行う場合、CA証明書の確認とAES暗号を仕様どおりの強度に保つことが難しい事によります。MachiKaniaではCA証明書の確認は行っておらず、AES暗号キー類推の難易度は高くはありません。従って、httpサイトへの接続ほどではないにせよ、httpsサイトへの接続は問題が起こりえることを考えてください。サイトからの情報の収集は問題ないですが、IDやパスワードなどの個人情報を送信することで接続を確保する場合には注意が必要で、自己責任の元で行ってください。


＜使用例＞

WGETクラスを用いて、情報をダウンロードして表示する例。

useclass WGET
print WGET::FORSTRING$("https://machikania.net/")


クラスを用いず、TCPCLIENT命令などを用いて情報をダウンロードする例。なお、このコードで「TCPCLIENT」を「TLSCLIENT」に変更すれば、httpサイトではなくhttpsサイトに接続できる。

t$="GET / HTTP/1.0\r\n"
t$=t$+"Host: machikania.net\r\n"
t$=t$+"Connection: close\r\n"
t$=t$+"\r\n"
dim b(64)
TCPSEND t$
TCPCLIENT "machikania.net"
t$=""
do until TCPSTATUS(1) : idle : loop
do
  i=TCPRECEIVE(b,256)
  if 0=i then break
  poke b+i,0
  t$=t$+b$
loop
TCPCLOSE
print t$


HTTPDクラスを用いて80番ポートにサーバーを構築する例。「/httproot」ディレクトリーに、index.htmを配置する。なお、この例ではURLの「?led=」を読み取って表示している。

useclass HTTPD
h=new(HTTPD,80,"/httproot")
do
  u$=h.START$()
  print u$,"'";h.GETPARAM$("led");"'"
loop

＜バージョン履歴＞
・KM-1503 2023年?月公開。
